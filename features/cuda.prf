# Based on:
# https://code.google.com/p/qmakecuda/
#
# Usage (either/or):
# (1) use CONFIG += cuda in your project
# (2) run qmake CONFIG+=cuda

CUDA_HOME = $$system(which nvcc | sed 's,/bin/nvcc$,,')
isEmpty(CUDA_HOME):CUDA_HOME=$$[CUDA_HOME]
isEmpty(CUDA_HOME):error(CUDA could not be found)

NVCC = $$CUDA_HOME/bin/nvcc
debug:NVCC_FLAGS += -g -G

cuda.input = CUDA_SOURCES
cuda.output = ${QMAKE_FILE_BASE}.o
cuda.commands = $$NVCC \
  -Xcompiler $$join(QMAKE_CXXFLAGS,",") \
  $$NVCC_OPTS $$NVCC_FLAGS \
  -c ${QMAKE_FILE_NAME} -o ${QMAKE_FILE_OUT}
cuda.depend_command = $$NVCC \
  -Xcompiler $$join(QMAKE_CXXFLAGS,",") \
  $$NVCC_OPTS $$NVCC_FLAGS \
  -M $$CUDA_INC ${QMAKE_FILE_NAME}
cuda.dependency_type = TYPE_C
QMAKE_EXTRA_COMPILERS += cuda

*-64:CUDA_LIB = $$CUDA_HOME/lib64
else:CUDA_LIB = $$CUDA_HOME/lib

QMAKE_RPATHDIR *= $$CUDA_LIB

INCLUDEPATH *= $$CUDA_HOME/include
LIBS        *= -L$$CUDA_LIB -lcudart
DEFINES     *= HAVE_CUDA

OTHER_FILES += $$CUDA_SOURCES
